# ----------------------------------------------------------------------
#
# This makefile has been automatically generated by WinGDB 2.3, build 1499
# Do not edit.
#
# Project: Network
#
# ----------------------------------------------------------------------

PLATFORM=unix

ifneq ("$(windir)","")
PLATFORM=windows
endif

ifneq ("$(WinDir)","")
PLATFORM=windows
endif

ifneq ("$(WINDIR)","")
PLATFORM=windows
endif

UNAME=$(shell uname -o)

ifeq ("$(UNAME)","Cygwin")
PLATFORM=cygwin
endif

ifeq ("$(BUILD_CONFIGURATION)","")
	BUILD_CONFIGURATION=ReleaseLinux
endif

ifeq ("$(BUILD_CONFIGURATION)","DebugLinux")
CC= gcc
CXX= g++
AR= ar
CFLAGS= -g -I ../ -D_DEBUG
CXXFLAGS= -g -I ../ -D_DEBUG
ARFLAGS= cru
LDFLAGS= -shared
RESULT=libNetworkD.so
INTERMEDIATE_DIR=DebugLinux/obj
DESTINATION_DIR=../Bin
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=$(INTERMEDIATE_DIR)
	DESTINATION_DIR_MK=$(DESTINATION_DIR)
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=DebugLinux/obj
	DESTINATION_DIR_MK=../Bin
endif

endif

ifeq ("$(BUILD_CONFIGURATION)","ReleaseLinux")
CC= gcc
CXX= g++
AR= ar
CFLAGS= -O2 -g -I ../
CXXFLAGS= -O2 -g -I ../
ARFLAGS= cru
LDFLAGS= -shared
RESULT=libNetwork.so
INTERMEDIATE_DIR=ReleaseLinux/obj
DESTINATION_DIR=../Bin
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=$(INTERMEDIATE_DIR)
	DESTINATION_DIR_MK=$(DESTINATION_DIR)
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=ReleaseLinux/obj
	DESTINATION_DIR_MK=../Bin
endif

endif

SOURCES= BrokerClient.cpp BrokerServer.cpp Client.cpp FileSocket.cpp LogClient.cpp LogServer.cpp MirrorClient.cpp MirrorServer.cpp Network.cpp ProfilerClient.cpp ProfilerServer.cpp Server.cpp Socket.cpp SocketList.cpp UDPServer.cpp

SOURCEPATHS= BrokerClient.cpp BrokerServer.cpp Client.cpp FileSocket.cpp LogClient.cpp LogServer.cpp MirrorClient.cpp MirrorServer.cpp Network.cpp ProfilerClient.cpp ProfilerServer.cpp Server.cpp Socket.cpp SocketList.cpp UDPServer.cpp

HEADERS= BrokerClient.h BrokerServer.h Client.h FileSocket.h LogClient.h LogServer.h MirrorClient.h MirrorServer.h NetworkDLL.h NetworkTypes.h ProfilerClient.h ProfilerServer.h Server.h Socket.h SocketList.h UDPServer.h

VPATH= $(INTERMEDIATE_DIR)

OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCES)))
OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(OBJECTNAMES))

$(DESTINATION_DIR)/$(RESULT): $(OBJECTNAMES)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
	$(CXX) -shared $(CXXFLAGS) $(SYSROOTFLAGS) $(OBJECTPATHS) -o $@ $(LDFLAGS)

$(INTERMEDIATE_DIR)/Network.d: $(SOURCES) $(HEADERS)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CXX) $(CXXFLAGS) -MM $(SOURCEPATHS) > $@

-include $(INTERMEDIATE_DIR)/Network.d

clean:
	$(RM) $(DESTINATION_DIR)/$(RESULT)
	$(RM) $(INTERMEDIATE_DIR)/Network.d
	$(RM) $(OBJECTPATHS)

%.o: %.cpp
	$(CXX) -fPIC $(CXXFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<

%.o: %.c
	$(CC) -fPIC $(CFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<
